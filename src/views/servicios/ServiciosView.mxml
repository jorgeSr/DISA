<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 currentState="contraido" >
	
	<s:transitions> 
		<s:Transition id="tran" fromState="*" toState="*" > 
			<s:Sequence id="t1" targets="{[submenu]}"> 
				<mx:Blur duration="100" blurXFrom="0.0" blurXTo="10.0" />
				<mx:Parallel>
					<mx:Move duration="150"/>
					<mx:Resize duration="150"/>
				</mx:Parallel>    
				<mx:Blur duration="100" blurXFrom="10.0" blurXTo="0.0" /> 
			</s:Sequence> 
		</s:Transition>
	</s:transitions>
	
	<fx:Script>
		<![CDATA[
			import com.idwa.ds.disa.vo.Equipo;
			import com.idwa.ds.disa.vo.Status;
			import com.idwa.ds.disa.vo.Sucursal;
			import com.idwa.ds.disa.vo.User;
			import com.idwa.ds.disa.vo.detail.EquipoDetail;
			import com.idwa.ds.disa.vo.detail.ServicioDetail;
			import com.idwa.exceptions.ZendExceptios;
			import com.idwa.utils.DateUtil;
			
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import views.servicios.reclamos.ReclamosCRUD;
			import views.servicios.status.StatusCRUD;
			import views.servicios.ubicaciones.UbicacionesCRUD;
			
			[Bindable]
			private var servicio:ServicioDetail = new ServicioDetail();
			[Bindable]
			private var servicioSearch:ServicioDetail = new ServicioDetail();	
			
			protected function searchClickHandler():void
			{
				var search:SearchServicios = SearchServicios( PopUpManager.createPopUp( this, SearchServicios, true ) );								
				search.addEventListener( "successful", function(event:Event):void{
					
					dp = new ArrayCollection( event.target.remS.search.lastResult as Array );
					PopUpManager.removePopUp( event.target as IFlexDisplayObject );
				}); 
			}
			
			protected function nuevoClickHandler(nuevo:Boolean):void
			{
				var serviciosCrud:ServiciosCU = ServiciosCU( PopUpManager.createPopUp( this, ServiciosCU, true ) );
				
				if( nuevo )
				{
					serviciosCrud.setData( new ServicioDetail(), nuevo );	
				}
				else
				{
					var dUtil:DateUtil = new DateUtil();
					var sd:ServicioDetail = new ServicioDetail();
					sd.id = servicios.selectedItem.id;
					sd.accesorios = servicios.selectedItem.accesorios;
					
					sd.cliente = new User();
					sd.cliente.id = sd.clienteId = servicios.selectedItem.clienteId;
					sd.cliente.nombre = servicios.selectedItem.cNombre;
					sd.cliente.apellidos = servicios.selectedItem.cApellidos;
					
					sd.comentarios = servicios.selectedItem.comentarios;
					sd.condision = servicios.selectedItem.condision;
					
					sd.equipo = new EquipoDetail();					
					sd.equipo.descripcion = servicios.selectedItem.eDescripcion;
					sd.equipo.marca = servicios.selectedItem.eMarca;
					sd.equipo.modelo = servicios.selectedItem.eModelo;
					sd.equipo.serie = sd.equipoId = servicios.selectedItem.equipoId;
					
					sd.falla = servicios.selectedItem.equipoId;
					sd.fechaRecepcion = dUtil.parseDate( servicios.selectedItem.fechaRecepcion );
					sd.fechaReparacionEstimada = dUtil.parseDate( servicios.selectedItem.fechaReparacionEstimada );
					sd.monto = servicios.selectedItem.monto;
					
					sd.recibe = new User();
					sd.recibe.id = sd.recibeId = servicios.selectedItem.recibeId;
					sd.recibe.nombre = servicios.selectedItem.rNombre;
					sd.recibe.apellidos = servicios.selectedItem.rApellidos;
					
					sd.status = new Status();
					sd.status.status = servicios.selectedItem.stStatus;
					sd.status.fecha = dUtil.parseDate( servicios.selectedItem.stFecha );
					sd.status.id = sd.statusId = servicios.selectedItem.statusId;
					
					sd.sucursal = new Sucursal();
					sd.sucursal.descripcion =  servicios.selectedItem.suDescripcion;
					sd.sucursal.id = sd.sucursalId = servicios.selectedItem.sucursalId;
					
					sd.tecnico = new User();
					sd.tecnico.id = sd.tecnicoId = servicios.selectedItem.tecnicoId;
					sd.tecnico.nombre = servicios.selectedItem.tNombre;
					sd.tecnico.apellidos = servicios.selectedItem.tApellidos;
					
					sd.tipoServicio = servicios.selectedItem.tipoServicio;
					sd.tipoTrabajo = servicios.selectedItem.tipoTrabajo;
					serviciosCrud.setData( sd, nuevo );
				}
												
				serviciosCrud.addEventListener( "successful", function(event:Event):void{
					
					Alert.show( "Se realizaron los cambios con exito !" );
					var sdSearch:ServicioDetail = new ServicioDetail();
					sdSearch.id = event.target.lastInsertUpdateId;
					remS.search( sdSearch );
					PopUpManager.removePopUp( event.target as IFlexDisplayObject );
				}); 
			}			
			
			protected function confirmDelete():void
			{
				Alert.show("Realmente desea eliminar este Registro?",
					"CONFIRMAR ELIMINAR!",
					Alert.OK|Alert.CANCEL,this, 
					function(event:CloseEvent):void{
						if(event.detail==Alert.OK){
							
							remS.remove( servicios.selectedItem.id );
						}							
					},null,Alert.OK);
			}
			
			protected function myRemote_faultHandler(event:FaultEvent):void
			{				
				enabled = true;
				Alert.show( ( event.fault.faultString == '' ? ZendExceptios.getFaultString( event.fault.faultCode ):event.fault.faultString  ) , "Error" );
			}
			
			protected function remove_resultHandler(event:ResultEvent):void
			{
				enabled = true;
				Alert.show( 'Se realizaron los cambios correctamente',"Alerta");
				dp.removeItemAt( servicios.selectedIndex );
				dp.refresh();
			}
			
			protected function getFullName(item:Object, column:AdvancedDataGridColumn):String
			{				
				switch( column.dataTipField ){
				
					case "cliente": return item.cNombre + " " + item.cApellidos; break;
					case "tecnico": return item.tNombre + " " + item.tApellidos; break;
					case "recibio": return item.rNombre + " " + item.rApellidos; break;
					default: return "n/a";
				}				
			}
			
			protected function gotoDetalle(event:MouseEvent):void
			{
				currentState = ( currentState == "detalle" ? "contraido":"detalle" );
			}
			
			protected function getTipoTrabajoLabel(text:String):String
			{			
				switch(text)
				{
					case "D": return "Domicilio"; break;
					case "T": return "Taller"; break;	
					default: return "n/a"; break;
				}
			}
			
			protected function getTipoServicioLabel(text:String):String
			{			
				switch(text)
				{
					case "E": return "Garantia Extendida"; break;
					case "G": return "Garantia"; break;
					case "C": return "Con Cargo"; break;
					default: return "n/a"; break;
				}
			}
			
			protected function search_resultHandler(event:ResultEvent):void
			{
				enabled = true;
				dp = event.result == null ? new ArrayCollection():new ArrayCollection( event.result as Array );
				dp.refresh();
			}
			
			protected function reclamos_clickHandler(event:MouseEvent):void
			{
				var servicioTmp:ServicioDetail = new ServicioDetail();
				servicioTmp.id = servicios.selectedItem.id;
				var reportes:ReclamosCRUD = ReclamosCRUD( PopUpManager.createPopUp( this, ReclamosCRUD, true ) );
				reportes.init( servicioTmp );
			}
			
			protected function status_clickHandler(event:MouseEvent):void
			{
				var status:StatusCRUD = StatusCRUD( PopUpManager.createPopUp( this, StatusCRUD, true ) );
				status.addEventListener( "successful", function(event:Event):void{
					
					//Cambia el status actual en el servicio seleccionado
					//PopUpManager.removePopUp( event.target as IFlexDisplayObject );
				});
			}
			
			protected function ubicacion_clickHandler(event:MouseEvent):void
			{
				var ubicaciones:UbicacionesCRUD = UbicacionesCRUD( PopUpManager.createPopUp( this, UbicacionesCRUD, true ) );
				ubicaciones.setData( servicios.selectedItem.id, servicios.selectedItem.suDescripcion, servicios.selectedItem.sucursalId);
				ubicaciones.addEventListener( "successful", function(event:Event):void{
					
					servicios.selectedItem.suDescripcion = event.target.currentSucursalSalida;
					servicios.selectedItem.sucursalId = event.target.currentSucursalSalidaId;
				});
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="contraido"/>
		<s:State name="detalle"/>
	</s:states>
	
	<fx:Declarations>
		<s:RemoteObject id="remS" destination="zend" source="servicioC" 
						fault="myRemote_faultHandler(event)" showBusyCursor="true"
						invoke="enabled=false;">
			
			<s:method name="remove" result="remove_resultHandler(event)" />
			<s:method name="search" result="search_resultHandler(event)" />
		</s:RemoteObject>
		
		<s:ArrayCollection id="dp" />
		
		<s:CurrencyFormatter id="currencyF" currencySymbol="$"
							 useCurrencySymbol="true"
							 useGrouping="true"/>
	</fx:Declarations>
	
	<!--
	/****
	* S -> Servicio
	* E -> Equipo
	* CA -> Categoria
	* C -> Cliente ( User Class )
	* SU -> Sucursal
	* ST -> Status		 
	* T -> Tecnico ( User Class )		 
	* R -> Recibe ( User Class )
	*****/
	-->
	<mx:AdvancedDataGrid id="servicios" left="10" right="5" top="58" bottom="5" minWidth="980"
						 minHeight="400" dataProvider="{dp}" designViewDataType="tree"
						 left.contraido="5" right.contraido="5" top.contraido="47"
						 bottom.contraido="5"
						 left.detalle="5" right.detalle="5" top.detalle="365" bottom.detalle="5"
						 minHeight.detalle="200">
		
		<mx:groupedColumns>
			<mx:AdvancedDataGridColumn dataField="id" headerText="ID" width="50"/>
			<mx:AdvancedDataGridColumn dataField="fechaRecepcion" headerText="RecepciÃ³n"/>
			<mx:AdvancedDataGridColumnGroup headerText="Cliente" >
				<mx:AdvancedDataGridColumn dataTipField="cliente" headerText="Nombre" labelFunction="getFullName" />
			</mx:AdvancedDataGridColumnGroup>
			<mx:AdvancedDataGridColumnGroup headerText="Tecnico" >
				<mx:AdvancedDataGridColumn dataTipField="tecnico" headerText="Nombre" labelFunction="getFullName" />
			</mx:AdvancedDataGridColumnGroup>
			<mx:AdvancedDataGridColumnGroup headerText="Recibio" >				
				<mx:AdvancedDataGridColumn dataTipField="recibio" headerText="Nombre" labelFunction="getFullName" />
			</mx:AdvancedDataGridColumnGroup>			
			<mx:AdvancedDataGridColumnGroup headerText="Equipo" >
				<mx:AdvancedDataGridColumn dataField="eDescripcion" headerText="Descripcion" />
				<mx:AdvancedDataGridColumn dataField="eMarca" headerText="Marca" />
				<mx:AdvancedDataGridColumn dataField="eModelo" headerText="Modelo" />
				<mx:AdvancedDataGridColumn dataField="eSerie" headerText="Serie" />
				<mx:AdvancedDataGridColumn dataField="caDescripcion" headerText="Categoria" />
			</mx:AdvancedDataGridColumnGroup>
			<mx:AdvancedDataGridColumnGroup headerText="Ubicacion" >				
				<mx:AdvancedDataGridColumn  headerText="Sucursal" dataField="suDescripcion" />
			</mx:AdvancedDataGridColumnGroup>
			<mx:AdvancedDataGridColumnGroup headerText="Status" >
				<mx:AdvancedDataGridColumn  headerText="Status" dataField="stStatus" />
				<mx:AdvancedDataGridColumn  headerText="Fecha" dataField="stFecha" />
			</mx:AdvancedDataGridColumnGroup>
		</mx:groupedColumns>
	</mx:AdvancedDataGrid>
	
	<s:Group id="submenu" width="100%" minWidth="980"
			 x.detalle="0" width.detalle="140" height.detalle="310">
		<s:Button left="138" top="10" width="120" height="40" label="Nuevo" chromeColor="#D5FE8E"
				  icon="@Embed('assets/nuevo.png')"
				  left.contraido="133" top.contraido="10" height.contraido="30"
				  click="nuevoClickHandler(true)"
				  left.detalle="5" top.detalle="86" width.detalle="130" height.detalle="30"/>
		
		<s:Button left="266" top="10" width="120" height="40" label="Editar" chromeColor="#FFF58B"
				  icon="@Embed('assets/editar.png')"
				  left.contraido="261" top.contraido="10" height.contraido="30"
				  enabled.contraido="{ servicios.selectedIndex != -1 }"
				  left.detalle="5" top.detalle="48" width.detalle="130" height.detalle="30"
				  click="nuevoClickHandler(false)"/>
		
		<s:Button left="394" top="10" width="120" height="40" label="Detalles" chromeColor="#FFFFFF"
				  icon="@Embed('assets/grupo.png')"
				  left.contraido="389" top.contraido="10" height.contraido="30"
				  enabled.contraido="{ servicios.selectedIndex != -1 }"
				  left.detalle="5" top.detalle="162" width.detalle="130" height.detalle="30"/>
		
		<s:Button left="10" top="10" width="120" height="40" label="Buscar" chromeColor="#9AE4FF"
				  icon="@Embed('assets/buscar.png')" click="searchClickHandler()"
				  left.contraido="5" top.contraido="10" height.contraido="30"
				  left.detalle="5" top.detalle="10" width.detalle="130" height.detalle="30"/>
		
		<s:Button left="794" top="10" width="120" height="40" label="Status" chromeColor="#FFFFFF"
				  icon="@Embed('assets/eye.png')"
				  left.contraido="789" top.contraido="10" height.contraido="30"
				  enabled.contraido="{ servicios.selectedIndex != -1 }"
				  left.detalle="5" top.detalle="238" width.detalle="130" height.detalle="30"
				  click="status_clickHandler(event)"/>
		
		<s:Button left="522" top="10" height="40" label="Ubicacion" chromeColor="#FFFFFF"
				  icon="@Embed('assets/ubicacion.png')"
				  left.contraido="517" top.contraido="10" height.contraido="30"
				  enabled.contraido="{ servicios.selectedIndex != -1 }"
				  left.detalle="5" top.detalle="200" width.detalle="130" height.detalle="30"
				  click="ubicacion_clickHandler(event)"/>
		
		<s:Button left="658" top="10" height="40" label="Reclamos" chromeColor="#FFFFFF"
				  icon="@Embed('assets/phone.png')" click="reclamos_clickHandler(event)"
				  left.contraido="653" top.contraido="10" height.contraido="30"
				  enabled.contraido="{ servicios.selectedIndex != -1 }"
				  left.detalle="5" top.detalle="276" width.detalle="130" height.detalle="30"/>
		
		<s:Button top="10" height="40" label="Eliminar" chromeColor="#FFA9A9"
				  icon="@Embed('assets/eliminar.png')" click="{confirmDelete()}"
				  right.contraido="5" top.contraido="10" height.contraido="30"
				  enabled.contraido="{ servicios.selectedIndex != -1 }"
				  left.detalle="5" top.detalle="124" width.detalle="130" height.detalle="30"/>
	</s:Group>
	<s:Group includeIn="detalle" left="140" right="5" top="1" height="365">
		<s:Label x="295" y="19" fontSize="14" fontWeight="bold" text="Datos del Equipo"/>
		<s:Label x="295" y="55" text="DescripciÃ³n"/>
		<s:Label x="295" y="105" text="Marco"/>
		<s:TextInput x="295" y="75" width="235" editable="false"
					 text="{servicios.selectedItem.eDescripcion}"/>
		<s:TextInput x="629" y="16" width="207" editable="false"
					 text="{currencyF.format( servicios.selectedItem.monto )}"/>
		<s:TextInput x="872" y="39" width="240" editable="false"
					 text="{servicios.selectedItem.fechaReparacionEstimada}"/>
		<s:TextInput x="872" y="92" width="240" editable="false"
					 text="{servicios.selectedItem.fechaRecepcion}"/>
		<s:TextInput x="872" y="145" width="240" editable="false"
					 text="{servicios.selectedItem.rNombre + ' ' + servicios.selectedItem.rApellidos}"/>
		<s:TextInput x="872" y="201" width="240" editable="false"
					 text="{servicios.selectedItem.stStatus}"/>
		<s:Label x="872" y="181" fontWeight="normal" text="Status Actual"/>
		<s:Label x="871" y="125" fontWeight="normal" text="Recibio"/>
		<s:Label x="872" y="19" fontWeight="normal" text="Fecha de ReparaciÃ³n Estimada"/>
		<s:Label x="570" y="21" fontWeight="normal" text="Monto"/>
		<s:TextInput x="295" y="125" width="235" editable="false"
					 text="{servicios.selectedItem.eMarca}"/>
		<s:Label x="295" y="155" text="Modelo"/>
		<s:TextInput x="295" y="175" width="235" editable="false"
					 text="{servicios.selectedItem.eModelo}"/>
		<s:Label x="295" y="205" text="Serie"/>
		<s:TextInput x="295" y="225" width="235" editable="false"
					 text="{servicios.selectedItem.eSerie}"/>
		<s:Label x="295" y="255" text="Categoria"/>
		<s:TextInput x="295" y="275" width="235" editable="false"
					 text="{servicios.selectedItem.caDescripcion}"/>
		<s:Label x="295" y="305" text="UbicaciÃ³n Actual"/>
		<s:TextInput x="295" y="325" width="235" editable="false"
					 text="{servicios.selectedItem.suDescripcion}"/>
		<s:Label x="20" y="69" fontSize="14" fontWeight="bold" text="Datos del Cliente"/>
		<s:Label x="20" y="105" text="Nombre Completo"/>
		<s:Label x="20" y="17" text="{ 'Tipo de Trabajo: ' + getTipoTrabajoLabel(servicios.selectedItem.tipoTrabajo)}"/>
		<s:Label x="20" y="38" text="{ 'Tipo de Servcio: ' + getTipoServicioLabel(servicios.selectedItem.tipoServicio)}"/>
		<s:Label x="20" y="155" text="DirecciÃ³n"/>
		<s:TextInput x="20" y="125" width="235" editable="false"
					 text="{servicios.selectedItem.cNombre + ' ' + servicios.selectedItem.cApellidos}"/>
		<s:TextInput x="20" y="175" width="235" editable="false"
					 text="{servicios.selectedItem.cDireccion}"/>
		<s:Label x="20" y="205" text="TelÃ©fono"/>
		<s:TextInput x="20" y="225" width="235" editable="false"
					 text="{servicios.selectedItem.cTelefono}"/>
		<s:Label x="20" y="255" text="Celular"/>
		<s:TextInput x="20" y="275" width="235" editable="false"
					 text="{servicios.selectedItem.cCelular}"/>
		<s:Label x="20" y="305" text="Ciudad / Estado"/>
		<s:TextInput x="20" y="325" width="235" editable="false"
					 text="{servicios.selectedItem.cCiudad + ' / ' + servicios.selectedItem.cEstado}"/>
		<mx:VRule x="273" y="20" height="340"/>
		<mx:VRule x="549" y="19" height="340"/>
		<mx:VRule x="854" y="21" height="340"/>
		<s:Label x="570" y="51" fontWeight="normal" text="Falla"/>
		<s:Label x="872" y="72" fontWeight="normal" text="Fecha de RecepciÃ³n"/>
		<s:TextArea x="570" y="69" width="266" height="50" text="{servicios.selectedItem.falla}"/>
		<s:Label x="570" y="127" fontWeight="normal" text="CondiciÃ³n"/>
		<s:TextArea x="570" y="145" width="266" height="50" text="{servicios.selectedItem.condision}"/>
		<s:Label x="570" y="203" fontWeight="normal" text="Accesorios"/>
		<s:TextArea x="570" y="221" width="266" height="50"
					text="{servicios.selectedItem.accesorios}"/>
		<s:Label x="570" y="279" fontWeight="normal" text="Comentarios"/>
		<s:TextArea x="570" y="297" width="266" height="50"
					text="{servicios.selectedItem.comentarios}"/>
	</s:Group>
	
</s:Group>
